<?php

/**
 * Implements hook_tokens_alter().
 *
 * We modify the message:field-node-ref-with-og:node-teaser token
 * so it will work when sending email messages.
 */
function sn_tokens_alter(array &$replacements, array $context) {
  if($context['type'] == 'message' && !empty($context['data']['message']) 
    && array_key_exists('[message:field-node-ref-with-og:node-teaser]', $replacements)
    && $replacements['[message:field-node-ref-with-og:node-teaser]'] == NULL) {
    $node = node_view(node_load($context['data']['message']->field_node_ref_with_og['und'][0]),'teaser');
    $replacements[$context['tokens']['field-node-ref-with-og:node-teaser']] = $node['body'][0]['#markup'];
  }
}

function sn_node_insert($node) {
  // Add subscription messages
  $message = message_create('group_content');
  $wrapper = entity_metadata_wrapper('message', $message);
  if($node->type == 'scheme') {
  $wrapper->field_og_ref->set($node->nid);
  }else{
  $wrappeer->field_og_ref->set($node->og_group_ref['und'][0]['target_id']);
  }
  $wrapper->field_node_ref_with_og->set($node->nid);
  $options = array(
    'rendered fields' => array(
      'message_notify_email_subject' => 'field_rendered_og_subject',
      'message_notify_email_body' => 'field_rendered_og_body',
    ),
  );
  $subscribe_options = array(
    'subscribe message' => FALSE,
    'email message' => TRUE,
  );
  message_subscribe_send_message('node', $node, $message, array('email' => $options), $subscribe_options);
}

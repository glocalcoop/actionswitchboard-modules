<?php

/**
 * @file
 * Bulk export of objects generated by Bulk export module.
 */

/**
 * Implements hook_views_api().
 */
function sprint_two_views_api($module, $api) {
  if ($module == 'views' && $api == 'views_default') {
    return array('version' => 2);
  }
}

/**
 * Implements hook_ctools_plugin_api().
 */
function sprint_two_ctools_plugin_api($module, $api) {
  if ($module == 'cer' && $api == 'default_cer_presets') {
    return array('version' => 1);
  }
  if ($module == 'context' && $api == 'context') {
    return array('version' => 3);
  }
  if ($module == 'file_entity' && $api == 'file_default_displays') {
    return array('version' => 1);
  }
  if ($module == 'msnf' && $api == 'msnf') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_image_default_styles().
 */
function sprint_two_image_default_styles() {
  $styles = array();

  // Exported image style: asb_scheme_preview_thumb.
  $styles['asb_scheme_preview_thumb'] = array(
    'name' => 'asb_scheme_preview_thumb',
    'effects' => array(
      3 => array(
        'label' => 'Scale and crop',
        'help' => 'Scale and crop will maintain the aspect-ratio of the original image, then crop the larger dimension. This is most useful for creating perfectly square thumbnails without stretching the image.',
        'effect callback' => 'image_scale_and_crop_effect',
        'dimensions callback' => 'image_resize_dimensions',
        'form callback' => 'image_resize_form',
        'summary theme' => 'image_resize_summary',
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 214,
          'height' => 123,
        ),
        'weight' => 1,
      ),
    ),
    'label' => 'asb_scheme_preview_thumb',
  );

  // Exported image style: thumbnail.
  $styles['thumbnail'] = array(
    'effects' => array(
      0 => array(
        'label' => 'Scale',
        'help' => 'Scaling will maintain the aspect-ratio of the original image. If only a single dimension is specified, the other dimension will be calculated.',
        'effect callback' => 'image_scale_effect',
        'dimensions callback' => 'image_scale_dimensions',
        'form callback' => 'image_scale_form',
        'summary theme' => 'image_scale_summary',
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => 100,
          'height' => 100,
          'upscale' => 1,
        ),
        'weight' => 0,
      ),
    ),
    'name' => 'thumbnail',
    'label' => 'thumbnail',
  );

  // Exported image style: medium.
  $styles['medium'] = array(
    'effects' => array(
      0 => array(
        'label' => 'Scale',
        'help' => 'Scaling will maintain the aspect-ratio of the original image. If only a single dimension is specified, the other dimension will be calculated.',
        'effect callback' => 'image_scale_effect',
        'dimensions callback' => 'image_scale_dimensions',
        'form callback' => 'image_scale_form',
        'summary theme' => 'image_scale_summary',
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => 220,
          'height' => 220,
          'upscale' => 1,
        ),
        'weight' => 0,
      ),
    ),
    'name' => 'medium',
    'label' => 'medium',
  );

  // Exported image style: large.
  $styles['large'] = array(
    'effects' => array(
      0 => array(
        'label' => 'Scale',
        'help' => 'Scaling will maintain the aspect-ratio of the original image. If only a single dimension is specified, the other dimension will be calculated.',
        'effect callback' => 'image_scale_effect',
        'dimensions callback' => 'image_scale_dimensions',
        'form callback' => 'image_scale_form',
        'summary theme' => 'image_scale_summary',
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => 480,
          'height' => 480,
          'upscale' => 0,
        ),
        'weight' => 0,
      ),
    ),
    'name' => 'large',
    'label' => 'large',
  );

  // Exported image style: square_thumbnail.
  $styles['square_thumbnail'] = array(
    'effects' => array(
      0 => array(
        'label' => 'Scale and crop',
        'help' => 'Scale and crop will maintain the aspect-ratio of the original image, then crop the larger dimension. This is most useful for creating perfectly square thumbnails without stretching the image.',
        'effect callback' => 'image_scale_and_crop_effect',
        'dimensions callback' => 'image_resize_dimensions',
        'form callback' => 'image_resize_form',
        'summary theme' => 'image_resize_summary',
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 180,
          'height' => 180,
        ),
        'weight' => 0,
      ),
    ),
    'name' => 'square_thumbnail',
    'label' => 'square_thumbnail',
  );

  // Exported image style: asb_scheme_leader_thumb.
  $styles['asb_scheme_leader_thumb'] = array(
    'name' => 'asb_scheme_leader_thumb',
    'effects' => array(
      2 => array(
        'label' => 'Scale and crop',
        'help' => 'Scale and crop will maintain the aspect-ratio of the original image, then crop the larger dimension. This is most useful for creating perfectly square thumbnails without stretching the image.',
        'effect callback' => 'image_scale_and_crop_effect',
        'dimensions callback' => 'image_resize_dimensions',
        'form callback' => 'image_resize_form',
        'summary theme' => 'image_resize_summary',
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '60',
          'height' => '60',
        ),
        'weight' => '1',
      ),
    ),
    'label' => 'asb_scheme_leader_thumb',
  );

  // Exported image style: asb_scheme_schemer_thumb.
  $styles['asb_scheme_schemer_thumb'] = array(
    'name' => 'asb_scheme_schemer_thumb',
    'effects' => array(
      3 => array(
        'label' => 'Scale and crop',
        'help' => 'Scale and crop will maintain the aspect-ratio of the original image, then crop the larger dimension. This is most useful for creating perfectly square thumbnails without stretching the image.',
        'effect callback' => 'image_scale_and_crop_effect',
        'dimensions callback' => 'image_resize_dimensions',
        'form callback' => 'image_resize_form',
        'summary theme' => 'image_resize_summary',
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '30',
          'height' => '30',
        ),
        'weight' => '1',
      ),
    ),
    'label' => 'asb_scheme_schemer_thumb',
  );

  // Exported image style: scheme_admin_profile.
  $styles['scheme_admin_profile'] = array(
    'name' => 'scheme_admin_profile',
    'effects' => array(),
    'label' => 'scheme_admin_profile',
  );

  // Exported image style: scheme_overview.
  $styles['scheme_overview'] = array(
    'name' => 'scheme_overview',
    'label' => 'scheme_overview',
    'effects' => array(
      1 => array(
        'label' => 'Scale and crop',
        'help' => 'Scale and crop will maintain the aspect-ratio of the original image, then crop the larger dimension. This is most useful for creating perfectly square thumbnails without stretching the image.',
        'effect callback' => 'image_scale_and_crop_effect',
        'dimensions callback' => 'image_resize_dimensions',
        'form callback' => 'image_resize_form',
        'summary theme' => 'image_resize_summary',
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '214',
          'height' => '123',
        ),
        'weight' => '1',
      ),
    ),
  );

  // Exported image style: asb_scheme_slideshow_full.
  $styles['asb_scheme_slideshow_full'] = array(
    'name' => 'asb_scheme_slideshow_full',
    'label' => 'asb_scheme_slideshow_full',
    'effects' => array(
      2 => array(
        'label' => 'Scale and crop',
        'help' => 'Scale and crop will maintain the aspect-ratio of the original image, then crop the larger dimension. This is most useful for creating perfectly square thumbnails without stretching the image.',
        'effect callback' => 'image_scale_and_crop_effect',
        'dimensions callback' => 'image_resize_dimensions',
        'form callback' => 'image_resize_form',
        'summary theme' => 'image_resize_summary',
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '666',
          'height' => '370',
        ),
        'weight' => '1',
      ),
    ),
  );

  return $styles;
}

/**
 * Implements hook_default_message_type_category().
 */
function sprint_two_default_message_type_category() {
  $items = array();
  return $items;
}

/**
 * Implements hook_default_message_type().
 */
function sprint_two_default_message_type() {
  $items = array();
  return $items;
}

/**
 * Implements hook_default_og_membership_type().
 */
function sprint_two_default_og_membership_type() {
  $items = array();
  $items['og_membership_type_default'] = entity_import('og_membership_type', '{
    "name" : "og_membership_type_default",
    "description" : "Default",
    "language" : "2",
    "rdf_mapping" : []
  }');
  return $items;
}

/**
 * Implements hook_default_rules_configuration().
 */
function sprint_two_default_rules_configuration() {
  $items = array();
  $items['rules_og_member_active'] = entity_import('rules_config', '{ "rules_og_member_active" : {
      "LABEL" : "OG member subscribe (Active)",
      "PLUGIN" : "reaction rule",
      "ACTIVE" : false,
      "REQUIRES" : [ "rules", "og" ],
      "ON" : { "og_user_insert" : [] },
      "IF" : [
        { "data_is" : { "data" : [ "og-membership:state" ], "value" : "1" } },
        { "entity_is_of_type" : { "entity" : [ "og-membership:group" ], "type" : "node" } }
      ],
      "DO" : [
        { "variable_add" : {
            "USING" : { "type" : "node", "value" : [ "og-membership:group" ] },
            "PROVIDE" : { "variable_added" : { "group" : "Added variable" } }
          }
        },
        { "mail" : {
            "to" : [ "account:mail" ],
            "subject" : "Your membership request was approved for \\u0027[group:title]\\u0027\\r\\n",
            "message" : "[account:name],\\r\\n\\r\\nYou are now a member in the group \\u0027[group:title]\\u0027 located at [group:url]"
          }
        },
        { "mail" : {
            "to" : [ "group:author:mail" ],
            "subject" : "[account:name] joined [group:title]",
            "message" : "[group:author:name],\\r\\n\\r\\n[account:name] joined [group:title] in [group:url]"
          }
        }
      ]
    }
  }');
  $items['rules_og_member_pending'] = entity_import('rules_config', '{ "rules_og_member_pending" : {
      "LABEL" : "OG member subscribe (Pending)",
      "PLUGIN" : "reaction rule",
      "ACTIVE" : false,
      "REQUIRES" : [ "rules", "og" ],
      "ON" : { "og_user_insert" : [] },
      "IF" : [
        { "data_is" : { "data" : [ "og-membership:state" ], "value" : "2" } },
        { "entity_is_of_type" : { "entity" : [ "og-membership:group" ], "type" : "node" } }
      ],
      "DO" : [
        { "variable_add" : {
            "USING" : { "type" : "node", "value" : [ "og-membership:group" ] },
            "PROVIDE" : { "variable_added" : { "group" : "Added variable" } }
          }
        },
        { "mail" : {
            "to" : [ "account:mail" ],
            "subject" : "Your membership request for \\u0027[group:title]\\u0027",
            "message" : "[account:name],\\r\\n\\r\\nYour membership to group \\u0027[group:title]\\u0027 located at [group:url] is pending approval."
          }
        },
        { "mail" : {
            "to" : [ "group:author:mail" ],
            "subject" : "[account:name] membership request [group:title]",
            "message" : "[group:author:name],\\r\\n\\r\\n[account:name] requests membership for group \\u0027[group:title]\\u0027 in [group:url].\\r\\n\\r\\n[og_membership:og-membership-request]"
          }
        }
      ]
    }
  }');
  $items['rules_og_new_content'] = entity_import('rules_config', '{ "rules_og_new_content" : {
      "LABEL" : "OG new content notification",
      "PLUGIN" : "reaction rule",
      "ACTIVE" : false,
      "REQUIRES" : [ "og", "rules" ],
      "ON" : { "node_insert" : [] },
      "IF" : [ { "og_entity_is_group_content" : { "entity" : [ "node" ] } } ],
      "DO" : [
        { "og_get_members" : {
            "USING" : { "group_content" : [ "node" ] },
            "PROVIDE" : { "group_members" : { "group_members" : "List of group members" } }
          }
        },
        { "LOOP" : {
            "USING" : { "list" : [ "group-members" ] },
            "ITEM" : { "list_item" : "Current list item" },
            "DO" : [
              { "mail" : {
                  "to" : [ "list-item:mail" ],
                  "subject" : "New post in group",
                  "message" : "Hello [list-item:name],\\r\\n\\r\\nThere is a new post called [node:title] that belongs to one of the groups you are subscribed to.\\r\\n\\r\\n[site:name]\\r\\n",
                  "from" : [ "" ]
                }
              }
            ]
          }
        }
      ]
    }
  }');
  $items['rules_scheme_approved'] = entity_import('rules_config', '{ "rules_scheme_approved" : {
      "LABEL" : "Scheme Approved",
      "PLUGIN" : "reaction rule",
      "TAGS" : [ "scheme" ],
      "REQUIRES" : [ "workflow_rules", "rules" ],
      "ON" : { "workflow_state_changed" : [] },
      "IF" : [
        { "workflow_check_state" : { "node" : [ "node" ], "workflow_state" : { "value" : { "4" : "4" } } } }
      ],
      "DO" : [
        { "mail" : {
            "to" : [ "node:author:mail" ],
            "subject" : "Your scheme has been approved!!!",
            "message" : "Welcome [node:author],\\r\\n\\r\\nYour scheme [node:title] has been approved.  You will soon be contacted directly by your facilitator to help you get started.  In the mean time, have you started your homework?  If not, go here [where we will be entering a link].\\r\\n\\r\\nSincerely,\\r\\n\\r\\nThe Yes Labs Team",
            "language" : [ "" ]
          }
        }
      ]
    }
  }');
  $items['rules_scheme_rejected'] = entity_import('rules_config', '{ "rules_scheme_rejected" : {
      "LABEL" : "Scheme Rejected",
      "PLUGIN" : "reaction rule",
      "TAGS" : [ "scheme" ],
      "REQUIRES" : [ "workflow_rules", "rules" ],
      "ON" : { "workflow_state_changed" : [] },
      "IF" : [
        { "workflow_check_state" : { "node" : [ "node" ], "workflow_state" : { "value" : { "3" : "3" } } } }
      ],
      "DO" : [
        { "mail" : {
            "to" : [ "node:author:mail" ],
            "subject" : "Sorry, but your scheme was not approved.",
            "message" : "Hello [node:author],\\r\\n\\r\\nYour scheme [node:title] has been rejected by the Yes Labs.  We hope you will continue to come up with interesting ideas, but this time, we think you just didn\\u0027t have it.  We\\u0027d like to see you back again.  So look over the schemes at [site:url] and grab some inspiration!\\r\\n\\r\\nSincerely,\\r\\n\\r\\nThe Yes Labs Team",
            "language" : [ "" ]
          }
        }
      ]
    }
  }');
  $items['rules_rule_component_for_sending_reminders'] = entity_import('rules_config', '{ "rules_rule_component_for_sending_reminders" : {
      "LABEL" : "Rule component for sending reminders",
      "PLUGIN" : "rule",
      "REQUIRES" : [ "workflow_rules" ],
      "USES VARIABLES" : { "rule_conf" : { "label" : "Rules Configuration", "type" : "rules_config" } },
      "IF" : [
        { "workflow_check_state" : {
            "node" : [ "site:og-context--node" ],
            "workflow_state" : { "value" : { "2" : "2" } }
          }
        }
      ],
      "DO" : []
    }
  }');
  return $items;
}
